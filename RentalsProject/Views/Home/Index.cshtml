@model SortedPaginatedList<RentalListing>

@{
    ViewData["Title"] = "Home Page";
    RentalListing? columns = default!;
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<h1>Public Rental Listings</h1>

<form asp-action="Index">
    <input type="text" name="search" asp-for="SearchCriteria" />
    @* or <input type="text" name="search" class="@ModelSearchCriteria" /> *@
    <input type="submit" value="Search" class="btn btn-primary" />
    <input type="submit" value="Reset" name="Reset" class="btn btn-primary" />
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-previousSort="@Model.PreviousSort" asp-route-sortBy="@nameof(RentalListing.ListingSummary)">
                    @Html.DisplayNameFor(model => columns.ListingSummary)
                </a>
            </th>

            <th>
                <a asp-action="Index" asp-route-previousSort="@Model.PreviousSort" asp-route-sortBy="@nameof(RentalListing.City)">
                    @Html.DisplayNameFor(model => columns.City)
                </a>
            </th>

            <th>
                <a asp-action="Index" asp-route-previousSort="@Model.PreviousSort" asp-route-sortBy="@nameof(RentalListing.Province)">
                    @Html.DisplayNameFor(model => columns.Province)
                </a>
            </th>

            <th>
                @Html.DisplayNameFor(model => columns.ListingPricePerDay)
            </th>

            <th>
                <a asp-action="Index" asp-route-previousSort="@Model.PreviousSort" asp-route-sortBy="@nameof(RentalListing.NumberOfBedrooms)">
                    @Html.DisplayNameFor(model => columns.NumberOfBedrooms)
                </a>
            </th>

            <th>
                @Html.DisplayNameFor(model => columns.NumberOfBathrooms)
            </th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ListingSummary)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Province)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.ListingPricePerDay)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.NumberOfBedrooms)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.NumberOfBathrooms)
                </td>

                <td>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary">View Details</a>
                </td>

                <td>
                    @if (User.Identity?.IsAuthenticated == true) 
                    {
                        <a asp-action="Create" asp-controller="Reservations" asp-route-rentalListingId="@item.Id" class="btn btn-primary">
                            Book Reservation
                        </a>
                    }
                    else
                    {
                        <p class="text-danger">You need to log in to book a reservation.</p>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<p>Page @Model.PageNumber out of @Model.TotalPages</p>

@{
    var prevDisabled = Model.HasPreviousPage ? "" : "disabled";
    var nextDisabled = Model.HasNextPage ? "" : "disabled";
}

<a asp-action="Index" asp-route-previousSort="@Model.PreviousSort" asp-route-pageNumber="@Model.PreviousPageNumber" class="btn btn-info @prevDisabled">
    Previous
</a>

<a asp-action="Index" asp-route-previousSort="@Model.PreviousSort" asp-route-pageNumber="@Model.NextPageNumber" class="btn btn-info @nextDisabled">
    Next
</a>